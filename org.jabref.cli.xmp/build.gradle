dependencies {
    compile project(':org.jabref.model')
    compile project(':org.jabref.logic')



    // update to 2.0.x is not possible - see https://github.com/JabRef/jabref/pull/1096#issuecomment-208857517
    runtime 'org.apache.pdfbox:pdfbox:1.8.13'
    compile 'org.apache.pdfbox:jempbox:1.8.13'







    // >1.8.0-beta is required for java 9 compatibility
    runtime 'org.apache.logging.log4j:log4j-api:2.10.0'
    runtime 'org.apache.logging.log4j:log4j-core:2.10.0'
    runtime 'org.apache.logging.log4j:log4j-slf4j-impl:2.10.0'
    runtime 'org.apache.logging.log4j:log4j-jcl:2.10.0'

    // need to use snapshots as the stable version is from 2013 and doesn't support v1.0.1 CitationStyles
    runtime 'org.citationstyles:styles:1.0.1-SNAPSHOT'
    runtime 'org.citationstyles:locales:1.0.1-SNAPSHOT'

    testCompile 'org.antlr:antlr-runtime:3.5.2'
    testCompile 'com.github.tomakehurst:wiremock:2.14.0'
    testCompile 'com.tngtech.archunit:archunit-junit:0.5.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.junit.platform:junit-platform-commons:1.1.0-M2'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0-M2'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.1.0-M2'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.1.0-M2'
    testRuntime 'org.junit.vintage:junit-vintage-engine:5.1.0-M2'
    testRuntime 'org.apache.logging.log4j:log4j-core:2.10.0'
    testRuntime 'org.apache.logging.log4j:log4j-jul:2.10.0'
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'org.assertj:assertj-swing:3.8.0'
    testCompile 'org.assertj:assertj-swing-junit:3.8.0'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.mockito:mockito-core:2.13.0'
    testCompile 'org.reflections:reflections:0.9.11'
    testCompile "org.testfx:testfx-core:4.0.+"
    testCompile "org.testfx:testfx-junit:4.0.+"
    testCompile 'com.tngtech.archunit:archunit:0.5.0'
    testCompile 'org.xmlunit:xmlunit-core:2.5.1'
    testCompile 'org.xmlunit:xmlunit-matchers:2.5.1'
}

// Test tasks
junitPlatform {
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

// Test result tasks
task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")

    jacoco {
        append = true
    }
}

task jacocoMerge(type: JacocoMerge) {
    executionData file("$buildDir/jacoco/junitPlatformTest.exec")
    dependsOn junitPlatformTest
}

jacocoTestReport {
    executionData jacocoMerge.destinationFile
    dependsOn jacocoMerge

    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

afterEvaluate {
    def junitPlatformTest = tasks.junitPlatformTest

    jacoco {
        toolVersion = '0.8.0'
        applyTo(junitPlatformTest)
    }

    task jacocoJunit5TestReport(type: JacocoReport) {
        executionData jacocoMerge.destinationFile
        dependsOn jacocoMerge
        sourceSets sourceSets.main
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories = files(sourceSets.main.output)

        reports {
            xml.enabled true
            html.enabled true
        }
    }
}
